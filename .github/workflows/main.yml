name: Release and Publish
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test and Generate Coverage Badge
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests and generate coverage report
        run: npm run test:cov

      - name: Generate coverage badge
        uses: jpb06/coverage-badges-action@latest
        with:
          no-commit: true

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: ./badges

  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    outputs:
      new_version: ${{ steps.tag_version.outputs.new_version }}
      bump_type: ${{ steps.bump_type.outputs.bump_type }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Version Bump Type
        id: bump_type
        run: |
          title=$(git log -1 --pretty=%B | sed -n '2p' || true)
          BUMP_TYPE="patch" # Default to patch
          if [[ "$title" == *"[major]"* ]]; then
            BUMP_TYPE="major"
          elif [[ "$title" == *"[minor]"* ]]; then
            BUMP_TYPE="minor"
          fi
          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT

      - name: Get next version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ steps.bump_type.outputs.bump_type }}
          dry_run: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository name to lowercase
        id: repo_lowercase
        run: echo "repo=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image (amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ steps.repo_lowercase.outputs.repo }}:latest-amd64
            ghcr.io/${{ steps.repo_lowercase.outputs.repo }}:v${{ steps.tag_version.outputs.new_version }}-amd64
            ghcr.io/${{ steps.repo_lowercase.outputs.repo }}:${{ github.sha }}-amd64

      - name: Build and push Docker image (arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/${{ steps.repo_lowercase.outputs.repo }}:latest-arm64
            ghcr.io/${{ steps.repo_lowercase.outputs.repo }}:v${{ steps.tag_version.outputs.new_version }}-arm64
            ghcr.io/${{ steps.repo_lowercase.outputs.repo }}:${{ github.sha }}-arm64

  create_release:
    name: Create Release and Commit Changelog
    runs-on: ubuntu-latest
    needs: build_and_push
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage badge
        uses: actions/download-artifact@v4
        with:
          name: coverage-badge
          path: ./

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}

      - name: Create Git Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: none
          custom_tag: ${{ needs.build_and_push.outputs.new_version }}

      - name: Get PR Title
        id: pr_title
        run: |
          title=$(git log -1 --pretty=%B | sed -n '2p' || echo "Direct push to main")
          echo "title=$title" >> $GITHUB_OUTPUT

      - name: Update Changelog for Patch Release
        if: needs.build_and_push.outputs.bump_type == 'patch'
        run: |
          sed -i '/## \[Unreleased\]/a - ${{ steps.pr_title.outputs.title }}' CHANGELOG.md

      - name: Update Changelog for Minor/Major Release
        if: needs.build_and_push.outputs.bump_type == 'minor' || needs.build_and_push.outputs.bump_type == 'major'
        uses: release-flow/keep-a-changelog-action@v2
        with:
          command: bump
          version: v${{ needs.build_and_push.outputs.new_version }}

      - name: Switch to SSH remote for push
        run: git remote set-url origin git@github.com:${{ github.repository }}.git

      - name: Commit changelog and coverage badge
        run: |
          git add -f CHANGELOG.md ./badges
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "docs: update CHANGELOG.md and coverage badge for v${{ needs.build_and_push.outputs.new_version }} [skip ci]"
            git push
          fi
